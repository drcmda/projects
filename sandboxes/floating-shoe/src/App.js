import React, { Suspense, useRef, useState, useEffect } from "react"
import { Canvas, useFrame } from "@react-three/fiber"
import { AdaptiveDpr, AdaptiveEvents, OrbitControls, ContactShadows, Environment, useGLTF } from "@react-three/drei"

// Auto-generated by gltfjsx
function Shoe(props) {
  const ref = useRef()
  const { nodes, materials } = useGLTF("shoe.glb")
  const [active, setActive] = useState(false)
  const [hovered, setHovered] = useState(false)
  // Set cursor
  useEffect(() => void (document.body.style.cursor = hovered ? "pointer" : "auto"), [hovered])
  return (
    <mesh
      ref={ref}
      dispose={null}
      receiveShadow
      castShadow
      rotation={[0, 0, -0.5]}
      position={[0, 0.2, 0]}
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
      // Click outside the model ...
      onPointerMissed={() => setActive(false)}
      onClick={() => setActive(!active)}
      material={materials.phong1SG}
      geometry={nodes.Shoe.geometry}
      material-color={active ? "hotpink" : hovered ? "#82E0AA" : "white"}
      {...props}
    />
  )
}

export default function App() {
  return (
    <Canvas shadows dpr={[1, 2]} camera={{ position: [0, 0, 4], fov: 50 }} performance={{ min: 0.1 }}>
      <ambientLight intensity={0.5} />
      <spotLight intensity={0.3} angle={0.3} penumbra={1} position={[5, 25, 20]} shadow-bias={-0.0001} castShadow />
      <Suspense fallback={null}>
        <Shoe />
        <Environment preset="city" />
        <ContactShadows rotation-x={Math.PI / 2} position={[0, -0.8, 0]} opacity={0.25} width={10} height={10} blur={1.5} far={0.9} />
      </Suspense>
      <OrbitControls regress />
      <AdaptiveDpr pixelated />
      <AdaptiveEvents />
    </Canvas>
  )
}
