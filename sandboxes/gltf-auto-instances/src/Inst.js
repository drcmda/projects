/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useMemo, useContext, createContext } from 'react'
import { useGLTF, Merged } from '@react-three/drei'

const context = createContext()
export function Instances({ children, ...props }) {
  const { nodes } = useGLTF('/inst-transformed.glb')
  const instances = useMemo(
    () => ({
      Cube: nodes.Cube,
      Cube1: nodes.Cube002,
      Cube2: nodes.Cube003
    }),
    [nodes]
  )
  return (
    <Merged frames={1} meshes={instances} {...props}>
      {(instances) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export function Model(props) {
  const instances = useContext(context)
  return (
    <group {...props} dispose={null}>
      <instances.Cube />
      <instances.Cube position={[-0.8, 2.99, -1.88]} />
      <instances.Cube1 position={[1.11, 1.77, -4.7]} />
      <instances.Cube2 position={[2.37, -1.57, -3.43]} />
    </group>
  )
}

useGLTF.preload('/inst-transformed.glb')
