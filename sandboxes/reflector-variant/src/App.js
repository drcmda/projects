import * as THREE from 'three'
import { useState, useRef, useEffect } from 'react'
import { Canvas } from '@react-three/fiber'
import { useGLTF, OrbitControls, PerspectiveCamera, Environment } from '@react-three/drei'
import { MeshReflectorMaterial } from './drei/MeshReflectorMaterial'

export default function App({ ready }) {
  return (
    <Canvas dpr={[1, 2]} shadows>
      <fog attach="fog" args={['#101010', 0, 10]} />
      <Environment preset="city" />
      <group position={[0, -0.5, 0]}>
        <Tv ready={ready} scale={0.007} position={[0, 0, 0]} />
        <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, 0, 0]}>
          <planeGeometry args={[10, 10]} />
          <MeshReflectorMaterial
            blur={[400, 100]}
            resolution={1024}
            mixBlur={1}
            opacity={2}
            depthScale={1.1}
            minDepthThreshold={0.4}
            maxDepthThreshold={1.25}
            roughness={1}
          />
        </mesh>
        <mesh receiveShadow rotation-x={-Math.PI / 2} position={[0, 0.001, 0]}>
          <planeGeometry args={[10, 10]} />
          <shadowMaterial transparent color="black" opacity={0.4} />
        </mesh>
      </group>
      <OrbitControls
        makeDefault
        autoRotate
        autoRotateSpeed={0.3}
        maxPolarAngle={Math.PI / 2.3}
        minPolarAngle={Math.PI / 2.3}
        enableZoom={false}
        enablePan={false}
      />
      <PerspectiveCamera makeDefault fov={65} position={[0, 0, 4]}>
        <spotLight position={[10, 10, 5]} angle={0.15} penumbra={1} intensity={10} castShadow shadow-mapSize={[2048, 2048]} />
      </PerspectiveCamera>
    </Canvas>
  )
}

function Tv({ ready, ...props }) {
  /*
  Auto-generated by: https://github.com/pmndrs/gltfjsx
  author: SilkevdSmissen (https://sketchfab.com/SilkevdSmissen)
  license: CC-BY-NC-ND-4.0 (http://creativecommons.org/licenses/by-nc-nd/4.0/)
  source: https://sketchfab.com/3d-models/vintage-television-panasonic-tr-555-780fac0ec94e450eb5cb54348fc2933e
  title: Vintage Television - Panasonic TR-555
  */
  const group = useRef()
  const { nodes } = useGLTF('/tv-transformed.glb')
  const [video] = useState(() => Object.assign(document.createElement('video'), { src: '/drei.mp4', crossOrigin: 'Anonymous', loop: true }))
  useEffect(() => void (ready && video.play()), [ready, video])
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.body.geometry} material={nodes.body.material} />
      <mesh scale={[-1, 1, 1]} position={[-43.65, 161.61, 131.29]} geometry={nodes.screen.geometry}>
        <meshPhysicalMaterial clearcoat={1} clearcoatRoughness={0} toneMapped={false}>
          <videoTexture
            attach="map"
            args={[video]}
            flipY={false}
            repeat={[5, 9]}
            offset={[-0.1, 0]}
            wrapT={THREE.RepeatWrapping}
            wrapS={THREE.RepeatWrapping}
            encoding={THREE.sRGBEncoding}
          />
        </meshPhysicalMaterial>
      </mesh>
    </group>
  )
}

useGLTF.preload('/tv-transformed.glb')
